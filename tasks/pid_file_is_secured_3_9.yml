- name: Set Default
  ansible.builtin.set_fact:
    pid_file_validation: "not compliant"


- name: Find the PidFile path
  ansible.builtin.shell: "{{ apache_bin_dir }}/apachectl -t -D DUMP_PCONFIG | grep PidFile | awk '{print $2}'"
  register: pid_file_path
  changed_when: false
  failed_when: false
  ignore_errors: yes


- name: Get the PidFile directory
  ansible.builtin.set_fact:
    pid_file_directory: "{{ pid_file_path.stdout | dirname }}"
  ignore_errors: yes


- name: Check if PidFile directory is within DocumentRoot
  ansible.builtin.shell: "{{ apache_bin_dir }}/apachectl -t -D DUMP_CONFIG | grep -E 'DocumentRoot ' | awk '{print $2}'"
  register: document_root
  changed_when: false
  ignore_errors: yes


- name: Check if PidFile directory is outside DocumentRoot
  ansible.builtin.set_fact:
    pid_file_outside_docroot: "{{ pid_file_directory not in document_root.stdout }}"
  ignore_errors: yes


- name: Get ownership and permissions of the PidFile directory
  ansible.builtin.stat:
    path: "{{ pid_file_directory }}"
  register: pid_file_stats
  ignore_errors: yes


- name: Validate PidFile directory properties
  ansible.builtin.set_fact:
    pid_file_validation: >-
      {%- if pid_file_path.stdout == "" -%}
        not compliant
      {%- elif not pid_file_outside_docroot -%}
        in_document_root
      {%- elif pid_file_stats.stat.pw_name != 'root' or pid_file_stats.stat.gr_name != 'root' -%}
        not compliant
      {%- elif pid_file_stats.stat.mode | int('0o777') & int('0o022') != 0 -%}
        not compliant
      {%- else -%}
        compliant
      {%- endif -%}
  ignore_errors: yes


- name: Append PidFile validation status to CSV file
  ansible.builtin.lineinfile:
    path: "{{ csv_file }}"
    create: yes
    line: "{{ inventory_hostname }},3.9,pid_file_validation,{{ pid_file_validation | default('not compliant') | trim }}"
  delegate_to: localhost  